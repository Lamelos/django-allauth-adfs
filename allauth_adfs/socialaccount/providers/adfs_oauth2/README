If you want to verify the jwt returned by ADFS (STRONGLY RECOMMENDED) you must install the following:
```
pip install PyJWT
pip install cryptography
```

If you use a private PKI for the ADFS server, you will need to perform the following steps to trust the CA until https://github.com/certifi/python-certifi/issues/22 is resolved:
```
pip install certifi

python -m certifi "where()"

cat /path/to/trusted.pem >> /path/to/site-packages/certifi/cacert.pem
```


If you are using Python 2.x, you will need to install the following packages to communicate with ADFS using certificates from your internal certificate authority:
```
pip install pyopenssl
pip install ndg-httpsclient
```


claims used by default:

=============================
Send LDAP Attributes as Claim
=============================

Outgoing Claim Type: guid
LDAP Attribute: objectGUID

Outgoing Claim Type: UPN
LDAP Attribute: User-Principal-Name

Outgoing Claim Type: first_name
LDAP Attribute: Given-Name

Outgoing Claim Type: last_name
LDAP Attribute: Surname

Outgoing Claim Type: email
LDAP Attribute: email address or defaults to upn if not provided

==============================
Send Group Membership as Claim
==============================

name: is_staff
value: "1" or missing

name: is_superuser
value: "1" or missing

name: is_active
value: "1" or missing

=====
PowerShell to add oauth2 endpoint
=====
Add-ADFSClient -Name "Foo Client Pretty Name" -ClientId "foo-client-id" -RedirectUri "https://foo.bar.com/accounts/adfs_oauth2/login/callback/"

** currently the code assumes client id and resource are not the same.  would it be simpler to assume they are and not require the resource config?

